# vim: foldmethod=marker

# Application checks {{{1
# =======================
# Adapted from: https://gist.github.com/svenfuchs/6146321
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_mutt="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(neomutt)$'"

# Settings {{{1
# =============
# ----------------------------------------------------------------------------
# Set default terminal (bce fixes problems with background color erase in Vim)
# ----------------------------------------------------------------------------
set -g default-terminal "screen-256color-bce"
# --------------------------
# Set a larger history limit
# --------------------------
set -g history-limit 10000
# ----------------------------------------
# Fix delay between switching modes in Vim
# ----------------------------------------
set -sg escape-time 0
# -----------------
# Enable xterm keys
# -----------------
set-window-option -g xterm-keys on
# ----------------------------
# Use vi bindings in copy mode
# ----------------------------
set -g mode-keys vi
# --------------------
# Enable mouse support
# --------------------
set mouse on
# ------------------------------------
# Use Emacs bindings in command prompt
# ------------------------------------
set -g status-keys emacs
# ----------------------------
# Disable auto window renaming
# ----------------------------
set -g automatic-rename off
# ------------------------------
# Automatically renumber windows
# ------------------------------
set -g renumber-windows on

# Key bindings {{{1
# =================
# ------------------------
# Vim-like pane navigation
# ------------------------
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# ----------------------
# Switch between windows
# ----------------------
bind -n S-Left previous-window
bind -n S-Right next-window
# -----------------------
# Swap windows' positions
# -----------------------
bind -n C-Left swap-window -t -1
bind -n C-Right swap-window -t +1
# ----------------------------
# Create new window at the end
# ----------------------------
# TODO restore S-Down mapping when upgrading to tmux 2.7 (not working because of bug in 2.6)
# bind -n S-Down new-window -a -t "{end}" -c "#{pane_current_path}"
bind n new-window -a -t "{end}" -c "#{pane_current_path}" -n "..."
# -------------
# Rename window
# -------------
bind -n S-Up command-prompt "rename-window %%"
# ------------
# Split window
# ------------
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
# ------------------
# Reload tmux config
# ------------------
bind r source-file ~/.tmux.conf \; display-message "Tmux config reloaded"
# ---------------
# Start copy mode
# ---------------
# In vim, send special key that we can use to copy to clipboard
# bind -n ù copy-mode
bind-key -n ù if-shell "$is_vim" "send-keys ù" "copy-mode"
# ---------------------------------
# Copy to macOS buffer in copy mode
# ---------------------------------
# reattach-to-user-namespace is needed and can be installed via Homebrew
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
# -----------------------
# Paste from macOS buffer
# -----------------------
# In vim, send special key that we can use to paste from clipboard
bind -n ¥ if-shell "$is_vim" "send-keys ¥" 'run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"'
# bind -n ¥ run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
# -----------------------------------
# Start selection in copy mode with v
# -----------------------------------
bind -T copy-mode-vi v send -X begin-selection
# -----------------------
# Exit copy mode with Esc
# -----------------------
bind -T copy-mode-vi Escape send -X cancel
# ---------------------------------------------------
# Switch seamlessly between tmux panes and vim splits
# ---------------------------------------------------
# NB: the send-keys command in vim must take into account vimrc mappings
bind-key -n é if-shell "$is_vim" "send-keys é" "select-pane -t :.+"
# ----------------------------
# Map , to Enter except in vim
# ----------------------------
bind-key -n , if-shell "$is_vim" "send-keys ," "send-keys Enter"
# ----------
# Map ¿ to ,
# ----------
# Allows regularizing , in programs such as mutt where it is not mapped internally
bind-key -n ¿ send-keys ","
# ----------
# Map „ to é
# ----------
# Allows regularizing é in programs such as mutt where it is not mapped internally
bind-key -n „ send-keys "é"
# ----------------------
# Map Esc to C-h in Mutt
# ----------------------
bind-key -n Escape if-shell "$is_mutt" "send-keys C-g" "send-keys Escape"
# ---------------------------
# Unbind conflicting mappings
# ---------------------------
unbind -n C-j
unbind -n C-k
# -------------
# Sync dotfiles
# -------------
bind-key -n C-t run "source ~/.dotfiles/bootstrap.sh -f" \; display-message "Dotfiles synced"
# ---------
# Fix chars
# ---------
# Vim can't handle the û character, so we make entering û trigger Vim's digraph method
bind-key -n û if-shell "$is_vim" "send-keys C-k u >"
# Other useful mappings
bind-key -n º send-keys ù

# UI {{{1
# =======
# -----
# Panes
# -----
set -g pane-border-bg default
set -g pane-border-fg colour238
set -g pane-active-border-bg default
set -g pane-active-border-fg colour241
# -----------
# Status line
# -----------
set -g status-justify left
set -g status-bg colour234
set -g status-fg colour12
set -g status-interval 2
set -g status-left ""
set -g status-right "#[fg=colour247]#[bg=colour235] ›#S %H:%M "
set -g window-status-separator ""
set -g window-status-format "#[fg=colour244]#[bg=colour234] #W#{?window_zoomed_flag,•,} "
set -g window-status-current-format "#[fg=colour247]#[bg=colour235] #W#{?window_zoomed_flag,•,} "
# --------------
# Command prompt
# --------------
set -g message-fg colour245
set -g message-bg colour235
set -g message-command-fg colour245
set -g message-command-bg black
# ----------------
# Window selection
# ----------------
setw -g mode-bg colour247
setw -g mode-fg colour0
